@import url(https://fonts.googleapis.com/css2?family=Barlow:wght@200;400;700&display=swap);/*  Structure */
/*  Fonts     */
:root {
  --brand-primary: #003658;
  --brand-dark-blue: hsl(199 100% 20% /1);
  --brand-light-blue: rgb(110, 164, 202);
  --brand-blue: hsl(198 100% 45% / 1);
  --brand-yellow: hsl(44 99% 49% /1);
  --brand-secondary: hsl(44 99% 49% /1);
  --brand-lightgray: #fafafa;
  --brand-lightblue: #e3eff6;
  --color-text: rgb(12, 60, 96);
  --brand-primary-rgba: 57, 114, 155;
  --size-text-body: 16px;
  --size-container: 70em;
  --size-padding: 2rem;
  --spacing: min(5rem, 10vh);
  --font-text: Barlow;
  --white: #fff;
  --grid-gap: 0.8rem;
  --hr: 1px solid var(--brand-lightblue);
  --brand-gray: hsl(0 0% 50% / 1);
  --font-size-lg: 3.83rem;
  --font-size-md: 2rem;
  --font-size-large: clamp(2rem, 10vw, 3.5rem);
  --base-transition-time: 300ms;
  --base-transition: transform 300ms ease-out;
  --font-size-h2: 3.75rem;
  --footer-text-color: #a0a09f;
  --overlay: rgba(var(--brand-primary-rgba), 0.5);
}

@-webkit-keyframes chevron-in {
  100% {
    -webkit-clip-path: circle(111.6% at 0 50%);
            clip-path: circle(111.6% at 0 50%);
  }
}

@keyframes chevron-in {
  100% {
    -webkit-clip-path: circle(111.6% at 0 50%);
            clip-path: circle(111.6% at 0 50%);
  }
}
@-webkit-keyframes chevron-out {
  0% {
    -webkit-clip-path: circle(111.6% at 0 50%);
            clip-path: circle(111.6% at 0 50%);
  }
  100% {
    -webkit-clip-path: circle(0 at 90% 95%);
            clip-path: circle(0 at 90% 95%);
  }
}
@keyframes chevron-out {
  0% {
    -webkit-clip-path: circle(111.6% at 0 50%);
            clip-path: circle(111.6% at 0 50%);
  }
  100% {
    -webkit-clip-path: circle(0 at 90% 95%);
            clip-path: circle(0 at 90% 95%);
  }
}
@-webkit-keyframes chevron-transition {
  0% {
    -webkit-clip-path: polygon(0% 0%, 100% 0px, 100% 100%, 0% 100%);
            clip-path: polygon(0% 0%, 100% 0px, 100% 100%, 0% 100%);
  }
  50% {
    -webkit-clip-path: polygon(100% 0, 100% 0, 100% 100%, 0% 100%);
            clip-path: polygon(100% 0, 100% 0, 100% 100%, 0% 100%);
  }
  100% {
    -webkit-clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
            clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
  }
}
@keyframes chevron-transition {
  0% {
    -webkit-clip-path: polygon(0% 0%, 100% 0px, 100% 100%, 0% 100%);
            clip-path: polygon(0% 0%, 100% 0px, 100% 100%, 0% 100%);
  }
  50% {
    -webkit-clip-path: polygon(100% 0, 100% 0, 100% 100%, 0% 100%);
            clip-path: polygon(100% 0, 100% 0, 100% 100%, 0% 100%);
  }
  100% {
    -webkit-clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
            clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
  }
}
@-webkit-keyframes start {
  from {
    transform: translateX(-40%);
  }
  to {
    transform: translateX(0);
  }
}
@keyframes start {
  from {
    transform: translateX(-40%);
  }
  to {
    transform: translateX(0);
  }
}
@-webkit-keyframes write {
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes write {
  to {
    stroke-dashoffset: 0;
  }
}
@-webkit-keyframes fillIn {
  to {
    fill: currentColor;
  }
}
@keyframes fillIn {
  to {
    fill: currentColor;
  }
}
.transition-fade {
  transition: 1s;
  opacity: 1;
}

html.is-animating .transition-fade {
  opacity: 0;
}

.split .letter {
  opacity: 0;
}

.fade-in {
  opacity: 0;
  transition: opacity 2s ease-out;
}
.in-view .fade-in {
  opacity: 1;
}

.fade-in-zoom {
  transform: scale(1.3);
  opacity: 0;
  transition: opacity 2s ease-out, transform 800ms ease-out;
}
.in-view .fade-in-zoom, .fade-in-zoom.in-view {
  opacity: 1;
  transform: scale(1);
}

@-webkit-keyframes zoom {
  from {
    transform: scale(1);
    opacity: 1;
    border-width: 3px;
  }
  to {
    transform: scale(1.5);
    opacity: 0;
    border-width: 0;
  }
}

@keyframes zoom {
  from {
    transform: scale(1);
    opacity: 1;
    border-width: 3px;
  }
  to {
    transform: scale(1.5);
    opacity: 0;
    border-width: 0;
  }
}
.static-page main, .container {
  max-width: var(--size-container);
  margin-left: auto;
  width: 100%;
  margin-right: auto;
  padding-left: var(--size-padding);
  padding-right: var(--size-padding);
}

textarea, select, input[type=text], input[type=password], input[type=phone], input[type=url], input[type=date], input[type=email] {
  padding: 0.5em;
  border: 1px solid #003658;
  transition: all 1s;
  border-radius: 0;
}
textarea:focus, select:focus, input[type=text]:focus, input[type=password]:focus, input[type=phone]:focus, input[type=url]:focus, input[type=date]:focus, input[type=email]:focus, textarea:active, select:active, input[type=text]:active, input[type=password]:active, input[type=phone]:active, input[type=url]:active, input[type=date]:active, input[type=email]:active {
  border-color: #003658;
  outline: none;
  box-shadow: 0 0 21px rgba(0, 0, 0, 0.09);
}

a.add-button,
footer button, a.button,
[type=submit] {
  display: inline-block;
  position: relative;
  background: none;
  border: none;
  margin: 0;
  padding: 0;
  padding: 1em 2em;
  text-transform: uppercase;
  border: 3px solid var(--brand-yellow);
}

.alert {
  background-color: #fff;
  position: relative;
  box-shadow: 0 0 21px rgba(0, 0, 0, 0.09);
}

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bold;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

* {
  box-sizing: border-box;
}

*::-moz-selection {
  background: #121212;
  color: #fff;
}

*::selection {
  background: #121212;
  color: #fff;
}

::-webkit-scrollbar {
  width: 0.6rem;
  border-left: 1px solid #fcfcfc;
}

::-webkit-scrollbar-thumb {
  background: #003658;
}

html {
  min-height: 100%;
}

html, body {
  scroll-padding-top: 65px;
  /* set to the height of your header */
  scrollbar-color: var(--brand-secondary) #fff;
  scrollbar-width: thin;
}

hr {
  background-color: var(--brand-primary);
  border: none;
  height: 4px;
  display: block;
  flex-basis: 100%;
  margin: var(--size-padding) 0;
}

svg {
  fill: currentColor;
  max-width: 100%;
  height: auto;
}

body {
  font-family: var(--font-text);
  color: var(--color-text);
  padding: 0;
  margin: 0;
  font-size: var(--size-text-body);
  font-weight: 200;
}
body.toggled {
  overflow: hidden;
}
@media screen and (max-width: 860px) {
  body {
    --font-size-lg: 2rem;
    --font-size-md: 1.42rem;
  }
}

a {
  text-decoration: none;
  transition: color 0.4s;
  color: currentColor;
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
  text-decoration: none;
}

figure {
  margin: 0;
  padding: 0;
}

a:hover {
  text-decoration: none;
}

address {
  font-style: normal;
}

.core_loader-overlay {
  background-color: #fff;
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 99;
  opacity: 0;
  transition: opacity 1s 0.3s;
  transform-origin: center bottom;
  display: flex;
  justify-content: center;
  align-items: center;
  transition-delay: 1s;
  z-index: -1;
}
.core_loader-overlay svg path {
  fill: inherit;
}
.core_loader-overlay use {
  fill: var(--brand-blue);
}
.core_loader-overlay.-removed {
  transition-delay: 0s;
  opacity: 0;
  z-index: -1;
}
.core_loader-overlay.-show {
  pointer-events: auto;
  opacity: 1;
  transition-duration: 0.5s;
}
.core_loader-overlay.-front {
  z-index: 9999;
}
.core_loader-overlay.-front .loader_image svg {
  transform: scale(1);
  opacity: 1;
}
.core_loader-overlay .loader_image {
  max-width: 500px;
  overflow: hidden;
  height: auto;
}
.core_loader-overlay .loader_image svg {
  width: 100%;
  transition: opacity 0.25s, transform 1s;
  transform: scale(0);
  opacity: 0;
  will-change: opacity, transform;
}
.core_loader-overlay .loader_image path {
  will-change: stroke-dasharray, stroke-dashoffset;
  stroke: #fff;
  stroke-linecap: square;
  fill: var(--brand-blue);
  stroke-width: 0;
  -webkit-animation: write 2.5s ease-out, fillIn 1s cubic-bezier(0, 0.5, 1, 0.5);
          animation: write 2.5s ease-out, fillIn 1s cubic-bezier(0, 0.5, 1, 0.5);
  -webkit-animation-delay: 1s, 3s;
          animation-delay: 1s, 3s;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
  -webkit-animation-direction: alternate;
          animation-direction: alternate;
  color: #fff;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  -webkit-animation-play-state: paused;
          animation-play-state: paused;
}
.core_loader-overlay .loader_image path.orange {
  color: #E95E1D;
  stroke: currentColor;
}

.screen__reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}

.has-medium-font-size {
  font-size: 1.3rem;
  line-height: 1.4;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--color-text);
  font-weight: 200;
}
h1 strong,
h2 strong,
h3 strong,
h4 strong,
h5 strong,
h6 strong {
  display: block;
}

h1 {
  font-size: var(--font-size-lg);
  text-transform: uppercase;
  font-weight: normal;
}

h2 {
  font-size: var(--font-size-lg);
}

h3 {
  font-size: var(--font-size-md);
}

.box-title {
  margin: 0;
}

.center {
  text-align: center;
}

p,
ul,
ol,
blockquote {
  font-size: 1.2rem;
}

strong {
  font-weight: 400;
}

a:hover {
  color: var(--brand-yellow);
}

.overtitle {
  margin-top: 6rem;
  margin-bottom: 0;
  font-weight: normal;
  text-transform: uppercase;
  position: relative;
}
.overtitle:before {
  position: absolute;
  transform: translate(160%, -150%);
  content: "";
  display: inline-block;
  width: 9rem;
  height: 2.85rem;
  background-image: url(../images/bvmg-hr.svg);
  background-size: cover;
}
.overtitle + .marker {
  margin-top: 0;
}

.lead {
  font-size: 1.3rem;
}

.marker {
  position: relative;
}

.blog-meta {
  margin-bottom: 0;
}

.post-title {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

.page-title {
  position: relative;
  text-align: center;
}
.page-title:before {
  content: "";
  display: block;
  background-image: url(../images/bvmg-hr.svg);
  background-repeat: no-repeat;
  width: 9rem;
  height: 2.85rem;
  margin-bottom: 2rem;
  margin-left: auto;
  margin-right: auto;
  background-size: cover;
}
@media screen and (max-width: 860px) {
  .page-title:before {
    width: 104px;
    background-size: contain;
    height: 30px;
  }
}

ol.roadmap {
  border-left: 1px dashed var(--brand-yellow);
  margin-left: 1rem;
  padding: 0;
  list-style: none;
  counter-reset: steps;
}
ol.roadmap li {
  counter-increment: steps;
  padding-left: 3rem;
  position: relative;
  margin-bottom: var(--spacing);
}
ol.roadmap li:before, ol.roadmap li:after {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 2em;
  height: 2em;
  font-size: 1em;
  line-height: 2;
  font-weight: normal;
  left: -1rem;
  top: 0;
  content: "";
}
ol.roadmap li:before {
  background-color: #fff;
  border: 1px solid var(--brand-yellow);
  transform: rotate(45deg) translateX(-2px);
}
ol.roadmap li:after {
  content: counter(steps);
}

.brand-title {
  background-color: var(--brand-light-blue);
  text-align: center;
  padding: var(--size-padding);
  margin-top: var(--spacing);
}
.brand-title h1 {
  color: var(--white);
}

.leaflet-pane,
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow,
.leaflet-tile-container,
.leaflet-pane > svg,
.leaflet-pane > canvas,
.leaflet-zoom-box,
.leaflet-image-layer,
.leaflet-layer {
  position: absolute;
  left: 0;
  top: 0;
}

.leaflet-container {
  overflow: hidden;
}

.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none;
  -webkit-user-drag: none;
}

/* Prevents IE11 from highlighting tiles in blue */
.leaflet-tile::-moz-selection {
  background: transparent;
}
.leaflet-tile::selection {
  background: transparent;
}

/* Safari renders non-retina tile on retina better with this, but Chrome is worse */
.leaflet-safari .leaflet-tile {
  image-rendering: -webkit-optimize-contrast;
}

/* hack that prevents hw layers "stretching" when loading new tiles */
.leaflet-safari .leaflet-tile-container {
  width: 1600px;
  height: 1600px;
  -webkit-transform-origin: 0 0;
}

.leaflet-marker-icon,
.leaflet-marker-shadow {
  display: block;
}

/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */
/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */
.leaflet-container .leaflet-overlay-pane svg,
.leaflet-container .leaflet-marker-pane img,
.leaflet-container .leaflet-shadow-pane img,
.leaflet-container .leaflet-tile-pane img,
.leaflet-container img.leaflet-image-layer,
.leaflet-container .leaflet-tile {
  max-width: none !important;
  max-height: none !important;
}

.leaflet-container.leaflet-touch-zoom {
  touch-action: pan-x pan-y;
}

.leaflet-container.leaflet-touch-drag {
  /* Fallback for FF which doesn't support pinch-zoom */
  touch-action: none;
  touch-action: pinch-zoom;
}

.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {
  touch-action: none;
}

.leaflet-container {
  -webkit-tap-highlight-color: transparent;
}

.leaflet-container a {
  -webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);
}

.leaflet-tile {
  filter: inherit;
  visibility: hidden;
}

.leaflet-tile-loaded {
  visibility: inherit;
}

.leaflet-zoom-box {
  width: 0;
  height: 0;
  box-sizing: border-box;
  z-index: 800;
}

/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */
.leaflet-overlay-pane svg {
  -moz-user-select: none;
}

.leaflet-pane {
  z-index: 400;
}

.leaflet-tile-pane {
  z-index: 200;
}

.leaflet-overlay-pane {
  z-index: 400;
}

.leaflet-shadow-pane {
  z-index: 500;
}

.leaflet-marker-pane {
  z-index: 600;
}

.leaflet-tooltip-pane {
  z-index: 650;
}

.leaflet-popup-pane {
  z-index: 700;
}

.leaflet-map-pane canvas {
  z-index: 100;
}

.leaflet-map-pane svg {
  z-index: 200;
}

.leaflet-vml-shape {
  width: 1px;
  height: 1px;
}

.lvml {
  behavior: url(#default#VML);
  display: inline-block;
  position: absolute;
}

/* control positioning */
.leaflet-control {
  position: relative;
  z-index: 800;
  pointer-events: visiblePainted;
  /* IE 9-10 doesn't have auto */
  pointer-events: auto;
}

.leaflet-top,
.leaflet-bottom {
  position: absolute;
  z-index: 1000;
  pointer-events: none;
}

.leaflet-top {
  top: 0;
}

.leaflet-right {
  right: 0;
}

.leaflet-bottom {
  bottom: 0;
}

.leaflet-left {
  left: 0;
}

.leaflet-control {
  float: left;
  clear: both;
}

.leaflet-right .leaflet-control {
  float: right;
}

.leaflet-top .leaflet-control {
  margin-top: 10px;
}

.leaflet-bottom .leaflet-control {
  margin-bottom: 10px;
}

.leaflet-left .leaflet-control {
  margin-left: 10px;
}

.leaflet-right .leaflet-control {
  margin-right: 10px;
}

/* zoom and fade animations */
.leaflet-fade-anim .leaflet-tile {
  will-change: opacity;
}

.leaflet-fade-anim .leaflet-popup {
  opacity: 0;
  transition: opacity 0.2s linear;
}

.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {
  opacity: 1;
}

.leaflet-zoom-animated {
  transform-origin: 0 0;
}

.leaflet-zoom-anim .leaflet-zoom-animated {
  will-change: transform;
}

.leaflet-zoom-anim .leaflet-zoom-animated {
  transition: transform 0.25s cubic-bezier(0, 0, 0.25, 1);
}

.leaflet-zoom-anim .leaflet-tile,
.leaflet-pan-anim .leaflet-tile {
  transition: none;
}

.leaflet-zoom-anim .leaflet-zoom-hide {
  visibility: hidden;
}

/* cursors */
.leaflet-interactive {
  cursor: pointer;
}

.leaflet-grab {
  cursor: -webkit-grab;
  cursor: grab;
}

.leaflet-crosshair,
.leaflet-crosshair .leaflet-interactive {
  cursor: crosshair;
}

.leaflet-popup-pane,
.leaflet-control {
  cursor: auto;
}

.leaflet-dragging .leaflet-grab,
.leaflet-dragging .leaflet-grab .leaflet-interactive,
.leaflet-dragging .leaflet-marker-draggable {
  cursor: move;
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

/* marker & overlays interactivity */
.leaflet-marker-icon,
.leaflet-marker-shadow,
.leaflet-image-layer,
.leaflet-pane > svg path,
.leaflet-tile-container {
  pointer-events: none;
}

.leaflet-marker-icon.leaflet-interactive,
.leaflet-image-layer.leaflet-interactive,
.leaflet-pane > svg path.leaflet-interactive,
svg.leaflet-image-layer.leaflet-interactive path {
  pointer-events: visiblePainted;
  /* IE 9-10 doesn't have auto */
  pointer-events: auto;
}

/* visual tweaks */
.leaflet-container {
  background: #ddd;
  outline: 0;
}

.leaflet-container a {
  color: #0078A8;
}

.leaflet-container a.leaflet-active {
  outline: 2px solid orange;
}

.leaflet-zoom-box {
  border: 2px dotted #38f;
  background: rgba(255, 255, 255, 0.5);
}

/* general typography */
.leaflet-container {
  font: 12px/1.5 "Helvetica Neue", Arial, Helvetica, sans-serif;
}

/* general toolbar styles */
.leaflet-bar a,
.leaflet-bar a:hover {
  background-color: #fff;
  width: 26px;
  height: 26px;
  line-height: 26px;
  display: block;
  text-align: center;
  text-decoration: none;
  color: black;
}

.leaflet-bar a,
.leaflet-control-layers-toggle {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  display: block;
  border-radius: 50%;
  margin-bottom: 10px;
  opacity: 0.5;
}

.leaflet-bar a:hover {
  opacity: 1;
}

.leaflet-bar a.leaflet-disabled {
  cursor: default;
  background-color: #f4f4f4;
  color: #bbb;
}

.leaflet-touch .leaflet-bar a {
  width: 30px;
  height: 30px;
  line-height: 30px;
}

/* zoom control */
.leaflet-control-zoom-in,
.leaflet-control-zoom-out {
  font: bold 18px "Lucida Console", Monaco, monospace;
  text-indent: 1px;
}

.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out {
  font-size: 22px;
}

/* layers control */
.leaflet-control-layers {
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.4);
  background: #fff;
  border-radius: 5px;
}

.leaflet-control-layers-toggle {
  background-image: url(images/layers.png);
  width: 36px;
  height: 36px;
}

.leaflet-retina .leaflet-control-layers-toggle {
  background-image: url(images/layers-2x.png);
  background-size: 26px 26px;
}

.leaflet-touch .leaflet-control-layers-toggle {
  width: 44px;
  height: 44px;
}

.leaflet-control-layers .leaflet-control-layers-list,
.leaflet-control-layers-expanded .leaflet-control-layers-toggle {
  display: none;
}

.leaflet-control-layers-expanded .leaflet-control-layers-list {
  display: block;
  position: relative;
}

.leaflet-control-layers-expanded {
  padding: 6px 10px 6px 6px;
  color: #333;
  background: #fff;
}

.leaflet-control-layers-scrollbar {
  overflow-y: scroll;
  overflow-x: hidden;
  padding-right: 5px;
}

.leaflet-control-layers-selector {
  margin-top: 2px;
  position: relative;
  top: 1px;
}

.leaflet-control-layers label {
  display: block;
}

.leaflet-control-layers-separator {
  height: 0;
  border-top: 1px solid #ddd;
  margin: 5px -10px 5px -6px;
}

/* Default icon URLs */
.leaflet-default-icon-path {
  background-image: url(images/marker-icon.png);
}

/* attribution and scale controls */
.leaflet-container .leaflet-control-attribution {
  margin: 0;
}

.leaflet-control-attribution,
.leaflet-control-scale-line {
  padding: 0 5px;
  color: #333;
}

.leaflet-control-attribution a {
  text-decoration: none;
}

.leaflet-control-attribution a:hover {
  text-decoration: underline;
}

.leaflet-container .leaflet-control-attribution,
.leaflet-container .leaflet-control-scale {
  font-size: 11px;
}

.leaflet-left .leaflet-control-scale {
  margin-left: 5px;
}

.leaflet-bottom .leaflet-control-scale {
  margin-bottom: 5px;
}

.leaflet-control-scale-line {
  border: 2px solid #777;
  border-top: none;
  line-height: 1.1;
  padding: 2px 5px 1px;
  font-size: 11px;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
  background: #fff;
  background: rgba(255, 255, 255, 0.5);
}

.leaflet-control-scale-line:not(:first-child) {
  border-top: 2px solid #777;
  border-bottom: none;
  margin-top: -2px;
}

.leaflet-control-scale-line:not(:first-child):not(:last-child) {
  border-bottom: 2px solid #777;
}

.leaflet-touch .leaflet-control-attribution,
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
  box-shadow: none;
}

/* popup */
.leaflet-popup {
  position: absolute;
  text-align: center;
  margin-bottom: 20px;
}

.leaflet-popup-content-wrapper {
  padding: 1px;
  text-align: left;
  border-radius: 12px;
}

.leaflet-popup-content {
  margin: 13px 19px;
  line-height: 1.4;
}

.leaflet-popup-content p {
  margin: 18px 0;
}

.leaflet-popup-tip-container {
  width: 40px;
  height: 20px;
  position: absolute;
  left: 50%;
  margin-left: -20px;
  overflow: hidden;
  pointer-events: none;
}

.leaflet-popup-tip {
  width: 17px;
  height: 17px;
  padding: 1px;
  margin: -10px auto 0;
  transform: rotate(45deg);
}

.leaflet-popup-content-wrapper,
.leaflet-popup-tip {
  background: white;
  color: #333;
  box-shadow: 0 3px 14px rgba(0, 0, 0, 0.4);
}

.leaflet-container a.leaflet-popup-close-button {
  position: absolute;
  top: 0;
  right: 0;
  padding: 4px 4px 0 0;
  border: none;
  text-align: center;
  width: 18px;
  height: 14px;
  font: 16px/14px Tahoma, Verdana, sans-serif;
  color: #c3c3c3;
  text-decoration: none;
  font-weight: bold;
  background: transparent;
}

.leaflet-container a.leaflet-popup-close-button:hover {
  color: #999;
}

.leaflet-popup-scrolled {
  overflow: auto;
  border-bottom: 1px solid #ddd;
  border-top: 1px solid #ddd;
}

.leaflet-oldie .leaflet-popup-content-wrapper {
  zoom: 1;
}

.leaflet-oldie .leaflet-popup-tip {
  width: 24px;
  margin: 0 auto;
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)";
  filter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);
}

.leaflet-oldie .leaflet-popup-tip-container {
  margin-top: -1px;
}

.leaflet-oldie .leaflet-control-zoom,
.leaflet-oldie .leaflet-control-layers,
.leaflet-oldie .leaflet-popup-content-wrapper,
.leaflet-oldie .leaflet-popup-tip {
  border: 1px solid #999;
}

/* div icon */
.leaflet-div-icon {
  background: #fff;
  border: 1px solid #666;
}

/* Tooltip */
/* Base styles for the element that has a tooltip */
.leaflet-tooltip {
  position: absolute;
  padding: 6px;
  background-color: #fff;
  border: 1px solid #fff;
  border-radius: 3px;
  color: #222;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  pointer-events: none;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
}

.leaflet-tooltip.leaflet-clickable {
  cursor: pointer;
  pointer-events: auto;
}

.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
  position: absolute;
  pointer-events: none;
  border: 6px solid transparent;
  background: transparent;
  content: "";
}

/* Directions */
.leaflet-tooltip-bottom {
  margin-top: 6px;
}

.leaflet-tooltip-top {
  margin-top: -6px;
}

.leaflet-tooltip-bottom:before,
.leaflet-tooltip-top:before {
  left: 50%;
  margin-left: -6px;
}

.leaflet-tooltip-top:before {
  bottom: 0;
  margin-bottom: -12px;
  border-top-color: #fff;
}

.leaflet-tooltip-bottom:before {
  top: 0;
  margin-top: -12px;
  margin-left: -6px;
  border-bottom-color: #fff;
}

.leaflet-tooltip-left {
  margin-left: -6px;
}

.leaflet-tooltip-right {
  margin-left: 6px;
}

.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
  top: 50%;
  margin-top: -6px;
}

.leaflet-tooltip-left:before {
  right: 0;
  margin-right: -12px;
  border-left-color: #fff;
}

.leaflet-tooltip-right:before {
  left: 0;
  margin-left: -12px;
  border-right-color: #fff;
}

.toggled .leaflet-top {
  display: none;
}

label {
  font-weight: bold;
  margin-right: 10px;
  display: block;
  margin-bottom: 0.3em;
}
label.legal {
  line-height: 1.5;
  text-transform: none;
  font-size: 0.58rem;
  font-weight: normal;
  display: inline-block;
  color: var(--brand-gray);
}
label.legal a {
  font-size: inherit;
  font-weight: bold;
}

textarea {
  width: 80%;
}

.fieldset.inline {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  max-width: 54em;
}
.fieldset.inline p + p {
  margin-left: 2rem;
}

.custom-form-input {
  margin-top: 0.85rem;
}

input[type=checkbox],
input[type=radio] {
  position: absolute;
  z-index: 0;
  transform: scale(0);
  display: block;
}
input[type=checkbox] + label,
input[type=radio] + label {
  padding-left: 30px;
  font-weight: normal;
  font-size: 0.7em;
  position: relative;
}
input[type=checkbox] + label > *,
input[type=radio] + label > * {
  position: relative;
}
input[type=checkbox] + label:before, input[type=checkbox] + label:after,
input[type=radio] + label:before,
input[type=radio] + label:after {
  content: "";
  position: absolute;
  display: block;
}
input[type=checkbox] + label:before,
input[type=radio] + label:before {
  position: absolute;
  left: 0;
  background-color: #fff;
  display: inline-block;
  top: 0;
}
input[type=checkbox] + label:before,
input[type=radio] + label:before {
  width: 30px;
  height: 30px;
  left: 0;
}
input[type=checkbox] + label:before,
input[type=radio] + label:before {
  border-radius: 2px;
  border: 1px solid #003658;
  height: 15px;
  width: 15px;
  transition: background-color 300ms ease;
}
input[type=checkbox]:checked + label:before,
input[type=radio]:checked + label:before {
  background-color: #003658;
}

input[type=radio] + label:before {
  border-radius: 50%;
}

.blue .button span {
  background-color: #003658;
  border-color: #fff;
  color: #fff;
}

.button-thin {
  font-weight: 300;
  text-transform: uppercase;
  border: 1px solid #fff;
  font-size: 1rem;
  padding: 0.5em 1em;
  transition: all 300ms;
  position: relative;
}
.button-thin.with-icon {
  padding-left: 5rem;
  padding-right: 5rem;
}
.button-thin:hover {
  background-color: var(--white);
  color: #000;
}
.button-thin svg {
  width: auto;
  transform: rotate(270deg);
  -o-object-fit: cover;
     object-fit: cover;
  position: absolute;
  top: 0px;
  left: -1px;
  bottom: 0;
  height: 102%;
}

.blue .button:after {
  background-color: #fff;
}

.readmore {
  font-weight: 800;
}
.readmore svg {
  height: 1.1em;
  width: 1.1em;
  vertical-align: middle;
  margin-left: 4px;
  transition: var(--base-transition);
}
.readmore:hover svg {
  transform: translateX(5px);
}

.shadow-button {
  background-size: contain;
  display: inline-block;
  padding: 1rem;
  color: #fff;
  padding-bottom: 2rem;
  font-weight: bold;
  line-height: 1;
  font-size: 1.875rem;
  min-width: 11.25rem;
  min-height: 10.125rem;
  transition: all 0.6s;
  position: relative;
  top: 0;
}
.shadow-button:hover {
  top: -0.5rem;
}
@media screen and (max-width: 860px) {
  .shadow-button {
    margin-left: auto;
    margin-right: auto;
  }
}

a.add-button,
footer button {
  color: #003658;
}

.close {
  border: none;
  background-color: transparent;
  float: right;
}

.button-small {
  border: 3px solid #003658;
  background-color: #003658;
  color: #fff;
  display: inline-block;
  border-radius: 5px;
  text-transform: uppercase;
  font-size: 0.75rem;
  padding: 3px 10px;
  min-height: 30px;
}

.button-delete {
  background-color: red;
  border-color: red;
  padding-top: 0;
  padding-bottom: 0;
  margin-bottom: 1.765rem;
}

.header-button {
  background-color: #003658;
  color: #fff;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.11em;
  padding: 0.625rem 1.25rem;
  line-height: 1;
  vertical-align: middle;
}

.menu-bg,
.menu-toggle {
  font-weight: bold;
  outline: none;
  font-size: 0.8125rem;
  position: fixed;
  height: 2rem;
  width: 2rem;
  top: 1rem;
  right: 1rem;
  z-index: 10000;
  border-radius: 0;
  background-color: transparent;
  border: none;
  color: var(--brand-primary);
}
@media screen and (min-width: 860px) {
  .menu-bg,
.menu-toggle {
    display: none;
  }
}

.menu-toggle {
  transition: box-shadow 400ms;
  transition-delay: 1100ms;
}
.menu-toggle span.lines, .menu-toggle::before, .menu-toggle::after {
  display: block;
  height: 0.1875rem;
  min-height: 3px;
  width: 2rem;
  background-color: currentColor;
  transition: all 0.2s ease-in-out;
  transform-origin: center;
  border-radius: 2px;
}
.menu-toggle::before, .menu-toggle::after {
  content: "";
  position: absolute;
}
.menu-toggle span.lines {
  margin-top: -1px;
}
.menu-toggle::before {
  top: 22%;
}
.menu-toggle::after {
  bottom: 23%;
  margin-top: -2px;
}
.toggled .menu-toggle {
  transition-delay: 0ms;
  transition-duration: 0ms;
  color: #fff;
  box-shadow: none;
}
.toggled .menu-toggle span.lines {
  opacity: 0;
}
.toggled .menu-toggle::before {
  top: 44%;
  transform: rotate(45deg);
}
.toggled .menu-toggle::after {
  bottom: 49%;
  transform: rotate(-45deg);
}

.contact-form {
  padding: calc(var(--spacing) / 2);
  box-shadow: 0 8px 8px rgba(0, 0, 0, 0.3);
  margin-left: 7.06rem;
  margin-right: 7.06rem;
  position: relative;
  z-index: 2;
}

.inline-fields {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  max-width: 54em;
}

form .group {
  margin-bottom: 2rem;
}

.alert {
  padding: 1rem;
  margin-bottom: calc(var(--spacing) / 2);
}
.alert.alert-success {
  background-color: #003658;
  color: #fff;
}
.alert p {
  margin: 0;
  text-align: center;
}

.privacy-policy {
  display: flex;
}
.privacy-policy p {
  margin: 0;
  margin-left: 1rem;
  font-size: 0.8rem;
  margin-top: -5px;
}

.wpcf7-not-valid-tip {
  font-weight: normal;
  text-transform: none;
  display: block;
  font-size: 0.8em;
  margin-top: 0.5em;
}

fieldset {
  border: 0;
}

.nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.muted-nav {
  color: var(--footer-text-color);
  margin-top: var(--size-padding);
}
.muted-nav span {
  font-weight: 400;
  display: block;
  margin-bottom: 0.4em;
}
.muted-nav a {
  display: block;
  text-transform: lowercase;
}
.muted-nav a::first-letter {
  text-transform: uppercase;
}

.services-nav {
  margin-top: 2rem;
}
.services-nav a:before {
  content: "";
  display: inline-block;
  vertical-align: baseline;
  width: 2rem;
  height: 2px;
  background-color: #fff;
  margin-right: 0.5em;
}

.main-navigation ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
.main-navigation ul li {
  display: inline-block;
}
.main-navigation ul a,
.main-navigation ul span {
  display: inline-block;
  position: relative;
  padding: 0 0.83em;
}
.main-navigation ul a:hover,
.main-navigation ul span:hover {
  color: var(--brand-yellow);
}
.main-navigation ul .active a {
  opacity: 0.5;
}

.inline-contact {
  padding-right: 15px;
}
.inline-contact strong {
  font-size: 1rem;
  font-weight: bold;
  padding-right: 5px;
}

.main-navigation ul .top-level span {
  display: inline-block;
  overflow: hidden;
  font-weight: bold;
  font-size: 1rem;
}
.main-navigation ul .top-level span a,
.main-navigation ul .top-level span strong {
  display: inline-block;
  font-weight: bold;
  text-transform: lowercase;
  font-size: 1rem;
}
.main-navigation ul .top-level.active a {
  font-weight: bold;
  font-size: 1rem;
}
@media screen and (min-width: 860px) {
  .main-navigation ul .top-level + li {
    margin-left: 2rem;
  }
  .main-navigation ul .top-level .sub-menu {
    background-color: #fff;
    transition: transform 500ms ease, box-shadow 300ms ease;
    transform-origin: left top;
    transition-delay: 300ms, 0ms;
    position: absolute;
    top: 100%;
    left: 0;
    border-radius: 2px;
  }
  .main-navigation ul .top-level .sub-menu li {
    opacity: 0;
    transition-delay: 0s;
    transition: opacity 300ms;
    display: block;
  }
  .main-navigation ul .top-level .sub-menu li span.link {
    display: block;
    font-size: 0.875rem;
  }
  .main-navigation ul .top-level .sub-menu li a {
    font-size: 0.875rem;
    font-weight: normal;
    padding-left: 1rem;
  }
  .main-navigation ul .top-level:hover .sub-menu, .main-navigation ul .top-level:active .sub-menu, .main-navigation ul .top-level:focus .sub-menu {
    transition-delay: 0s, 500ms;
    transform: scaleY(1);
    box-shadow: 0 0 21px rgba(0, 0, 0, 0.09);
  }
  .main-navigation ul .top-level:hover .sub-menu li, .main-navigation ul .top-level:active .sub-menu li, .main-navigation ul .top-level:focus .sub-menu li {
    transition-delay: 500ms;
    opacity: 1;
  }
}
.main-navigation ul ul {
  transform: scaleY(0);
  overflow: hidden;
}
.main-navigation ul ul li a,
.main-navigation ul ul li strong {
  font-weight: normal;
  font-size: 0.8em;
}

.footer-nav a {
  font-size: 0.9rem;
}

nav.pages {
  display: flex;
  justify-content: space-between;
  margin-top: calc(var(--spacing) / 3);
  flex-wrap: wrap;
}

.site-footer nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.site-footer nav li {
  margin: 0;
  padding: 0;
}

.tns-nav {
  display: flex;
  justify-content: center;
  position: absolute;
  width: 100%;
  bottom: 70px;
}
.tns-nav button {
  transform: background-color var(--base-transition-time);
  border: 2px solid var(--white);
  border-radius: 50%;
  background-color: var(--brand-lightgray);
  margin-right: 10px;
  width: 15px;
  height: 15px;
  transform: scale(0.9);
}
.tns-nav button.tns-nav-active {
  background-color: transparent;
  transform: scale(1.2);
}

.prev-next {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 2rem;
  margin-top: var(--spacing);
  text-transform: uppercase;
}
.prev-next svg {
  width: 40px;
  height: auto;
}
.prev-next a {
  display: flex;
  align-items: center;
}
.prev-next a:last-child {
  text-align: right;
}
.prev-next span {
  margin-right: 1em;
  margin-left: 1em;
}
.prev-next a:first-child svg {
  transform: rotate(180deg);
}
.prev-next strong {
  display: block;
  font-size: 1.2em;
}

figure.icon {
  width: 64px;
}
figure svg {
  width: 100%;
  height: auto;
}

svg.logo {
  max-width: 180px;
}
@media (max-width: 1060px) {
  svg.logo {
    max-width: 150px;
  }
}
svg.logo path {
  fill: inherit;
}
svg.logo use {
  fill: var(--brand-blue);
}

img, video, iframe, svg {
  max-width: 100%;
}

.tns-outer {
  padding: 0 !important;
}
.tns-outer [hidden] {
  display: none !important;
}
.tns-outer [aria-controls], .tns-outer [data-action] {
  cursor: pointer;
}

.tns-visually-hidden {
  position: absolute;
  left: -9999px;
}

.tns-no-calc {
  position: relative;
  left: 0;
}

.tns-gallery {
  position: relative;
  left: 0;
  min-height: 1px;
}

.tippy-box {
  background-color: #fff;
  font-size: 0.625rem;
  line-height: 1.2;
  border-radius: 5px;
  padding: 0.5rem;
  box-shadow: 0 0 21px rgba(0, 0, 0, 0.09);
  border-bottom: 3px solid #003658;
}
.tippy-box a {
  font-size: inherit;
}

.tippy-box[data-animation=scale][data-placement^=top] {
  transform-origin: bottom;
}

.tippy-box[data-animation=scale][data-placement^=bottom] {
  transform-origin: top;
}

.tippy-box[data-animation=scale][data-placement^=left] {
  transform-origin: right;
}

.tippy-box[data-animation=scale][data-placement^=right] {
  transform-origin: left;
}

.tippy-box[data-animation=scale][data-state=hidden] {
  transform: scale(0.5);
  opacity: 0;
}

.entry-content,
.single-post,
.single-post-list {
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
  --border: 1px solid #ccc;
}
.entry-content img,
.single-post img,
.single-post-list img {
  display: block;
  border: var(--border);
  border-bottom: 0;
}
.entry-content article,
.single-post article,
.single-post-list article {
  padding: var(--size-padding);
  border: var(--border);
}

.single-post,
.single-post-list {
  display: flex;
  flex-wrap: wrap;
  padding-bottom: calc(var(--spacing) / 2);
  border-bottom: 1px solid #f3f3f3;
  flex-direction: column;
}

.related {
  display: flex;
  flex-wrap: wrap;
}
.related .single-post-list {
  flex-direction: column;
  flex-basis: 33%;
  border-bottom: 0;
}
.related .single-post-list figure {
  display: none;
}

.single-post-list + .single-post-list {
  margin-top: calc(var(--spacing) / 2);
}
.single-post-list > * {
  flex-grow: 1;
}
.single-post-list figure {
  flex-basis: 40%;
  text-align: center;
  min-width: 280px;
}
.single-post-list section.content {
  flex-basis: 50%;
  max-width: 80ch;
}
.single-post-list .readmore {
  margin-top: 2rem;
  display: inline-block;
}

.meta {
  flex-basis: 10%;
  padding-left: 2rem;
  padding-bottom: 2rem;
  white-space: nowrap;
  max-width: 20ch;
  font-weight: bold;
}

.single-post {
  display: flex;
}
.single-post header {
  padding-left: 10%;
}
.single-post aside {
  flex-basis: 10%;
}
.single-post section.content {
  flex-basis: 80%;
}
.single-post blockquote {
  border-left: 3px solid currentColor;
  padding: calc(var(--size-padding) / 2) var(--size-padding);
  max-width: 80ch;
  margin-left: 0;
}

/*!
 * baguetteBox.js
 * @author  feimosi
 * @version %%INJECT_VERSION%%
 * @url https://github.com/feimosi/baguetteBox.js
 */
#baguetteBox-overlay {
  display: none;
  opacity: 0;
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000000;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.8);
  transition: opacity 0.5s ease;
}
#baguetteBox-overlay.visible {
  opacity: 1;
}
#baguetteBox-overlay .full-image {
  display: inline-block;
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
}
#baguetteBox-overlay .full-image figure {
  display: inline;
  margin: 0;
  height: 100%;
}
#baguetteBox-overlay .full-image img {
  display: inline-block;
  width: auto;
  height: auto;
  max-height: 100%;
  max-width: 100%;
  vertical-align: middle;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
}
#baguetteBox-overlay .full-image figcaption {
  display: block;
  position: absolute;
  bottom: 0;
  width: 100%;
  text-align: center;
  line-height: 1.8;
  white-space: normal;
  color: #ccc;
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.6);
  font-family: sans-serif;
}
#baguetteBox-overlay .full-image:before {
  content: "";
  display: inline-block;
  height: 50%;
  width: 1px;
  margin-right: -1px;
}

#baguetteBox-slider {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  white-space: nowrap;
  transition: left 0.4s ease, transform 0.4s ease;
}
#baguetteBox-slider.bounce-from-right {
  -webkit-animation: bounceFromRight 0.4s ease-out;
          animation: bounceFromRight 0.4s ease-out;
}
#baguetteBox-slider.bounce-from-left {
  -webkit-animation: bounceFromLeft 0.4s ease-out;
          animation: bounceFromLeft 0.4s ease-out;
}

@-webkit-keyframes bounceFromRight {
  0% {
    margin-left: 0;
  }
  50% {
    margin-left: -30px;
  }
  100% {
    margin-left: 0;
  }
}

@keyframes bounceFromRight {
  0% {
    margin-left: 0;
  }
  50% {
    margin-left: -30px;
  }
  100% {
    margin-left: 0;
  }
}
@-webkit-keyframes bounceFromLeft {
  0% {
    margin-left: 0;
  }
  50% {
    margin-left: 30px;
  }
  100% {
    margin-left: 0;
  }
}
@keyframes bounceFromLeft {
  0% {
    margin-left: 0;
  }
  50% {
    margin-left: 30px;
  }
  100% {
    margin-left: 0;
  }
}
.baguetteBox-button#previous-button, .baguetteBox-button#next-button {
  top: 50%;
  top: calc(50% - 30px);
  width: 44px;
  height: 60px;
}

.baguetteBox-button {
  position: absolute;
  cursor: pointer;
  outline: none;
  padding: 0;
  margin: 0;
  border: 0;
  border-radius: 15%;
  background-color: #323232;
  background-color: rgba(50, 50, 50, 0.5);
  color: #ddd;
  font: 1.6em sans-serif;
  transition: background-color 0.4s ease;
}
.baguetteBox-button:focus, .baguetteBox-button:hover {
  background-color: rgba(50, 50, 50, 0.9);
}
.baguetteBox-button#next-button {
  right: 2%;
}
.baguetteBox-button#previous-button {
  left: 2%;
}
.baguetteBox-button#close-button {
  top: 20px;
  right: 2%;
  right: calc(2% + 6px);
  width: 30px;
  height: 30px;
}
.baguetteBox-button svg {
  position: absolute;
  left: 0;
  top: 0;
}

/*
    Preloader
    Borrowed from http://tobiasahlin.com/spinkit/
*/
.baguetteBox-spinner {
  width: 40px;
  height: 40px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px;
}

.baguetteBox-double-bounce1,
.baguetteBox-double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: bounce 2s infinite ease-in-out;
          animation: bounce 2s infinite ease-in-out;
}

.baguetteBox-double-bounce2 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s;
}

@-webkit-keyframes bounce {
  0%, 100% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
}

@keyframes bounce {
  0%, 100% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
}
figure.gallery {
  text-align: center;
}

/**
 *  styles shared by all screen sizes without grid support
 **/
[class*=grid-] {
  display: grid;
}

.blue-background {
  background-color: var(--brand-light-blue);
  --color-text: var(--white);
  padding-top: var(--size-padding);
}
.blue-background p,
.blue-background ul,
.blue-background ol {
  color: var(--color-text);
}

.grid-four {
  grid-template-columns: repeat(auto-fill, minmax(calc(var(--size-container) / 5), 1fr));
  gap: var(--grid-gap);
}

@media screen and (min-width: 820px) {
  .grid-third {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-template-columns: repeat(3, 1fr);
    grid-column-gap: var(--grid-gap);
  }
}

.hr {
  background: url(../images/bvmg-hr.svg) no-repeat 50% 50%;
  background-size: contain;
  height: 40px;
  margin: var(--size-padding);
}

.section {
  margin-top: var(--spacing);
  margin-bottom: var(--spacing);
}
.section:first-child {
  margin-top: 0;
}
.section p {
  max-width: 70ch;
}

.center {
  text-align: center;
}
.center p {
  margin-left: auto;
  margin-right: auto;
}

.single-service {
  flex-direction: column;
  display: flex;
  position: relative;
  max-height: 400px;
  overflow: hidden;
  margin-bottom: var(--grid-gap);
}
.single-service a.more {
  width: 40px;
  height: 40px;
  display: block;
  position: absolute;
  bottom: 20px;
  right: 20px;
  transition: var(--base-transition);
}
.single-service a.more:hover {
  transform: translateX(10px);
}
.single-service p {
  font-size: 0.8em;
}
.single-service .service-meta {
  padding: 0 var(--size-padding);
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background-color: var(--overlay);
  z-index: 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.single-service a {
  color: var(--white);
}
.single-service h3 {
  font-weight: bold;
  text-align: center;
}
.single-service img {
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
  height: 100%;
}

.depcore__testimonials-container,
.portfolio-carousel {
  position: relative;
  margin-bottom: 2rem;
  color: var(--white);
}
.depcore__testimonials-container::before, .depcore__testimonials-container::after,
.portfolio-carousel::before,
.portfolio-carousel::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
}
.depcore__testimonials-container::before,
.portfolio-carousel::before {
  background-color: rgba(var(--brand-primary-rgba), 0.5);
}
.depcore__testimonials-container svg,
.portfolio-carousel svg {
  width: 60px;
  height: auto;
  color: var(--brand-yellow);
}
.depcore__testimonials-container .testimonial-bg,
.portfolio-carousel .testimonial-bg {
  background-size: cover;
  background-position: 50% 50%;
}
.depcore__testimonials-container .testimonial-image,
.portfolio-carousel .testimonial-image {
  background-repeat: no-repeat;
  padding: var(--spacing) var(--size-padding);
}
.depcore__testimonials-container .testimonial,
.portfolio-carousel .testimonial {
  z-index: 3;
  position: relative;
  max-width: 60ch;
  margin-left: auto;
  margin-right: auto;
  min-height: 500px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding-left: var(--size-padding);
  padding-right: var(--size-padding);
}
.depcore__testimonials-container .textimonial-content,
.portfolio-carousel .textimonial-content {
  font-size: var(--font-size-md);
}
.depcore__testimonials-container h3,
.portfolio-carousel h3 {
  color: currentColor;
}
.depcore__testimonials-container .button-thin,
.portfolio-carousel .button-thin {
  margin-top: var(--size-padding);
}

.map {
  min-height: 300px;
  height: 50vh;
  max-height: 500px;
}

.grid-half {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-gap: 2rem;
}
.grid-half .content-left {
  grid-column: 1;
}
.grid-half .content-right {
  grid-row: 1;
  grid-column: 2;
}

.grid-container {
  grid-template-columns: minmax(0, 1fr) repeat(2, minmax(100px, 650px)) minmax(0, 1fr);
  grid-gap: 2rem;
}
.grid-container .content-left {
  grid-column: 2;
}

.grid-sidebar {
  grid-template-columns: 3fr 1fr;
  grid-gap: 2rem;
}

.sidebar {
  background-color: #f7f7f7;
  padding: 1.5rem 1rem;
}
.sidebar .contact-list {
  margin-top: 0;
  flex-direction: column;
}

.widget + .widget {
  margin-top: 1rem;
}

.cta {
  margin-top: var(--spacing);
  padding: var(--size-padding);
  background-color: var(--brand-yellow);
  display: flex;
  --color-text: #fff;
  align-items: center;
  justify-content: space-between;
}
.cta h3,
.cta .overtitle {
  margin: 0;
}
.cta svg {
  --white: var(--brand-secondary);
  --brand-yellow: #fff;
  width: 40px;
  height: auto;
}

.points {
  text-align: center;
  position: relative;
  --icon-fill: #fff;
}
.points img {
  max-width: 124px;
}
.points h3 {
  font-weight: normal;
  font-size: var(--font-size-md);
  font-weight: bold;
  color: var(--title-color);
}
.points strong {
  display: block;
  font-weight: inherit;
}

@media screen and (max-width: 860px) {
  .number-box + .number-box {
    margin: 2rem 0;
  }
}
.number-box .number {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3em;
  height: 3em;
  border: 4px solid var(--brand-yellow);
  margin-left: auto;
  margin-right: auto;
  margin-bottom: var(--size-padding);
  border-radius: 50%;
  font-size: 3rem;
}
@media (max-width: 820px) {
  .number-box .number {
    margin-bottom: calc(var(--size-padding) / 2);
  }
}
@media (max-width: 620px) {
  .number-box .number {
    width: 3em;
    height: 3em;
  }
}
.number-box .number span {
  font-weight: 400;
}

.flex-half {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  overflow: hidden;
  z-index: 1;
  position: relative;
}
.flex-half.blue {
  background-color: var(--brand-light-blue);
  color: #fff;
}
.flex-half.blue h1,
.flex-half.blue h2,
.flex-half.blue h3,
.flex-half.blue h4,
.flex-half.blue h5,
.flex-half.blue h6,
.flex-half.blue p,
.flex-half.blue ul,
.flex-half.blue ol {
  color: #fff;
}
.icons-section + .flex-half, .flex-half + .return, .flex-half + .cta.portfolio-link, .flex-half + .flex {
  --border: 80px solid var(--brand-dark-blue);
  border-top: var(--border);
  margin-top: 0;
}
.flex-half > * {
  flex-basis: 50%;
  min-width: 290px;
  flex-grow: 1;
}
.flex-half .image {
  position: relative;
  position: relative;
  min-height: 400px;
  overflow: hidden;
  display: flex;
  background-size: cover;
  background-position: 50% 50%;
}
.flex-half .image::before, .flex-half .image::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
}
.flex-half .image::before {
  background-color: rgba(var(--brand-primary-rgba), 0.5);
}
.flex-half .image img {
  -o-object-fit: cover;
     object-fit: cover;
  height: 100%;
}
.flex-half .parallax-container {
  position: absolute;
  height: 100%;
}
.flex-half .content {
  display: flex;
  justify-content: center;
  padding: var(--size-padding);
  align-self: center;
}
.flex-half .content article {
  max-width: 50ch;
}
.flex-half:nth-child(2n+1) {
  flex-direction: row-reverse;
}
.flex-half:nth-child(2n+1) .image img {
  left: 0;
  top: -40%;
}

.return {
  background-color: var(--brand-yellow);
  padding: var(--size-padding);
  text-align: center;
  color: var(--white);
}

.competences .icon-box {
  background-color: var(--brand-blue);
  color: var(--white);
  text-align: center;
  padding: var(--size-padding);
}
.competences .icon-box h4 {
  font-weight: bold;
  text-transform: uppercase;
  color: inherit;
  font-size: var(--font-size-md);
  margin-bottom: 0;
}
.competences .icon-box figure.icon {
  margin-left: auto;
  margin-right: auto;
  width: 126px;
}
@media screen and (min-width: 860px) {
  .competences .icon-box + .icon-box {
    border-left: 10px solid var(--white);
  }
}

.grid-five.hero {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-gap: 10px;
}
.grid-five.hero img,
.grid-five.hero a {
  display: block;
}
.grid-five.hero img {
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
}
.grid-five.hero a.link {
  background-color: var(--color-text);
  color: var(--white);
  font-weight: normal;
  padding: 15px;
  text-align: center;
}

.contact-bg {
  position: relative;
  padding: var(--spacing) 0;
  text-align: center;
  background: url(../images/kontakt-data-bg.webp);
  color: var(--white);
}
.contact-bg::before, .contact-bg::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
}
.contact-bg::before {
  background-color: rgba(var(--brand-primary-rgba), 0.5);
}
.contact-bg .container {
  position: relative;
  z-index: 3;
}
.contact-bg .contact-info {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}

.flex {
  display: flex;
  flex-wrap: wrap;
}
.flex:first-child {
  margin-top: calc(var(--spacing) * -1);
}

.block {
  background-size: cover;
  color: var(--white);
  padding: var(--size-padding);
  background-color: var(--bg-color);
  flex-grow: 1;
  min-width: 280px;
  flex-basis: 33%;
  position: relative;
}
.block:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: 0.7;
  background-color: var(--mask-color);
}
.block .block-content {
  position: relative;
  z-index: 3;
}

.block h2,
.block h3,
.block h1 {
  color: currentColor;
}

.block img {
  fill: #fff;
  max-width: 148px;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

h1 strong,
h2 strong,
h3 strong {
  font-weight: 700;
}

.cta.portfolio-link {
  text-align: center;
  background-color: var(--brand-light-blue);
}
.cta.portfolio-link h3,
.cta.portfolio-link h4 {
  margin: 0;
}
.cta.portfolio-link h3 {
  font-weight: normal;
}
.cta.portfolio-link a {
  color: currentColor;
}

.service-portfolio-link {
  background-color: var(--brand-light-blue);
  color: #fff;
}
.service-portfolio-link h3,
.service-portfolio-link h4 {
  margin: 0;
  color: #fff;
}
.service-portfolio-link h3 {
  font-weight: normal;
}
.service-portfolio-link a {
  color: currentColor;
}
.service-portfolio-link + .return {
  border-top: 0;
}

.contact-link {
  background-color: var(--brand-dark-blue);
}

.full-background {
  position: relative;
}
.full-background::before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  background-color: rgba(var(--brand-primary-rgba), 0.5);
}
.full-background video,
.full-background img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center center;
     object-position: center center;
  opacity: 1;
}
.full-background .content {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 3;
}
.full-background .content h3 {
  color: #fff;
}

/**
 *  styles mobile without grid support
 **/
@supports (grid-area: auto) {
  @media screen and (min-width: 860px) {
    .grid-half {
      grid-template-columns: repeat(2, 1fr);
    }
    .grid-half .content-left {
      grid-column: 1;
    }
    .grid-half .content-right {
      grid-row: 1;
      grid-column: 2;
    }

    .grid-container {
      grid-template-columns: minmax(0, 1fr) repeat(2, minmax(100px, 650px)) minmax(0, 1fr);
      grid-gap: 2rem;
    }
    .grid-container .content-left {
      grid-column: 2;
    }

    .grid-sidebar {
      grid-template-columns: 3fr 1fr;
      grid-gap: 2rem;
    }

    .sidebar {
      background-color: #f7f7f7;
      padding: 1.5rem 1rem;
    }
    .sidebar .contact-list {
      margin-top: 0;
      flex-direction: column;
    }

    .widget + .widget {
      margin-top: 1rem;
    }

    .cta {
      margin-top: var(--spacing);
      padding: var(--size-padding);
      background-color: var(--brand-yellow);
      display: flex;
      --color-text: #fff;
      align-items: center;
      justify-content: space-between;
    }
    .cta h3, .cta .overtitle {
      margin: 0;
    }
    .cta svg {
      --white: var(--brand-secondary);
      --brand-yellow: #fff;
      width: 40px;
      height: auto;
    }
  }
}
.tns-outer {
  padding: 0 !important;
  position: relative;
}
.tns-outer [hidden] {
  display: none !important;
}
.tns-outer [aria-controls],
.tns-outer [data-action] {
  cursor: pointer;
}

.tns-slider {
  transition: all 0s;
}
.tns-slider > .tns-item {
  box-sizing: border-box;
}

.tns-horizontal.tns-subpixel {
  white-space: nowrap;
}
.tns-horizontal.tns-subpixel > .tns-item {
  display: inline-block;
  vertical-align: top;
  white-space: normal;
}
.tns-horizontal.tns-no-subpixel:after {
  content: "";
  display: table;
  clear: both;
}
.tns-horizontal.tns-no-subpixel > .tns-item {
  float: left;
}
.tns-horizontal.tns-carousel.tns-no-subpixel > .tns-item {
  margin-right: -100%;
}

.tns-no-calc {
  position: relative;
  left: 0;
}

.tns-gallery {
  position: relative;
  left: 0;
  min-height: 1px;
}
.tns-gallery > .tns-item {
  position: absolute;
  left: -100%;
  transition: transform 0s, opacity 0s;
}
.tns-gallery > .tns-slide-active {
  position: relative;
  left: auto !important;
}
.tns-gallery > .tns-moving {
  transition: all 0.25s;
}

.tns-autowidth {
  display: inline-block;
}

.tns-lazy-img {
  transition: opacity 0.6s;
  opacity: 0.6;
}
.tns-lazy-img.tns-complete {
  opacity: 1;
}

.tns-ah {
  transition: height 0s;
}

.tns-ovh {
  overflow: hidden;
}

.tns-visually-hidden {
  position: absolute;
  left: -10000em;
}

.tns-transparent {
  opacity: 0;
  visibility: hidden;
}

.tns-fadeIn {
  opacity: 1;
  filter: alpha(opacity=100);
  z-index: 0;
}

.tns-normal,
.tns-fadeOut {
  opacity: 0;
  filter: alpha(opacity=0);
  z-index: -1;
}

.tns-vpfix {
  white-space: nowrap;
}
.tns-vpfix > div,
.tns-vpfix > li {
  display: inline-block;
}

.tns-t-subp2 {
  margin: 0 auto;
  width: 310px;
  position: relative;
  height: 10px;
  overflow: hidden;
}
.tns-t-ct {
  width: 2333.3333333333%;
  width: calc(100% * 70 / 3);
  position: absolute;
  right: 0;
}
.tns-t-ct:after {
  content: "";
  display: table;
  clear: both;
}
.tns-t-ct > div {
  width: 1.4285714286%;
  width: calc(100% / 70);
  height: 10px;
  float: left;
}

.tns-controls {
  z-index: 99;
  display: flex;
  width: 100%;
  justify-content: space-between;
  padding-left: 2rem;
  padding-right: 2rem;
  opacity: 0;
  transition: opacity 350ms ease;
  position: absolute;
  top: 50%;
  margin-top: -10px;
}
.tns-outer:hover .tns-controls {
  opacity: 1;
}
.tns-controls button {
  border: none;
  background-color: transparent;
  width: 20px;
  height: 20px;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
}
.tns-controls button + button {
  margin-left: 1rem;
}
.tns-controls button svg path {
  fill: #f3f3f3;
}
.tns-controls button:active, .tns-controls button:hover {
  outline: none;
}
.tns-controls button:active svg path, .tns-controls button:hover svg path {
  fill: #003658;
}
@media screen and (max-width: 860px) {
  .in-view .tns-controls {
    opacity: 1;
  }
}

figure.gallery {
  overflow: hidden;
}

.language-switch svg {
  width: 17px;
  height: auto;
  vertical-align: middle;
  margin-right: 4px;
}
@media screen and (max-width: 860px) {
  .language-switch {
    text-align: center;
    font-size: 1.3rem;
  }
}

.headroom {
  will-change: transform;
  transition: transform 200ms linear;
  position: fixed;
}

.headroom--pinned {
  transform: translateY(0%);
  background-color: #fff;
}

.headroom--unpinned {
  transform: translateY(-200%);
}
.headroom--unpinned.toggled {
  transform: translateY(0);
}

.headroom--not-top {
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
}

.headroom--top {
  box-shadow: none;
}

.socials {
  display: flex;
  justify-content: center;
}
.socials a {
  margin-left: 5px;
}
@media (min-width: 860px) {
  .socials {
    position: fixed;
    right: 0;
    margin-top: 0 !important;
    height: 100vh;
    z-index: 9;
    flex-direction: column;
    justify-content: center;
  }
}

.site-header {
  width: 100%;
  transition: all 0.7s ease-out;
  top: 0;
  z-index: 999;
  min-height: 7rem;
}
.site-header .head {
  margin-right: auto;
  margin-left: auto;
}
.site-header a {
  text-decoration: none;
}
.site-header .toggable a {
  font-size: 1.3rem;
}
@media (max-width: 1060px) {
  .site-header .toggable a {
    font-size: 1rem;
  }
}
.site-header h1.logo {
  margin: 0;
  line-height: 1;
  transition: all 0.4s;
  position: absolute;
  top: 0.5rem;
  left: 1rem;
}
@media (max-width: 1060px) {
  .site-header h1.logo {
    top: 1rem;
  }
}
.site-header h1.logo svg {
  height: auto;
}
.scrolled .site-header h1.logo {
  margin-top: 0;
}

@media screen and (max-width: 861px) {
  .site-header .inner {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .site-header .toggable {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 100vh;
    opacity: 0;
    transition: opacity 300ms;
    pointer-events: none;
    z-index: 9999;
    display: flex;
    align-items: center;
    font-size: clamp(2rem, 10vw, 10rem);
    padding-bottom: 4rem;
    background-color: #0c3c60;
  }
  .site-header .toggable nav {
    width: 50%;
    margin-left: auto;
    margin-right: auto;
  }
  .site-header .toggable nav ul {
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-content: center;
  }
  .site-header .toggable li {
    border-bottom: 1px solid #fff;
    padding: 5px;
  }
  .site-header .toggable a {
    color: var(--white);
    font-size: 0.9em;
    font-weight: normal;
  }
  .site-header.toggled .toggable {
    opacity: 1;
    pointer-events: all;
    transition-delay: 300ms;
  }
}
@media screen and (min-width: 860px) {
  .site-header .inner {
    margin-top: 1.5rem;
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }
  .site-header .menu-in, .site-header .menu-out {
    display: none;
  }
  .site-header .logo {
    grid-row: 1/span 2;
  }
  .site-header .contact {
    justify-self: flex-end;
    display: flex;
  }
  .site-header .contact > * {
    margin-left: 1rem;
  }
  .site-header .toggable {
    margin-top: 30px;
  }
  .site-header .main-navigation {
    display: flex;
  }
}
.site-footer {
  margin-top: var(--spacing);
  color: var(--footer-text-color);
  padding-bottom: 40px;
}

.copyright {
  color: var(--brand-gray);
  display: flex;
  justify-content: space-between;
  gap: 2rem;
  align-items: center;
  margin-top: var(--spacing);
}

.designer {
  text-align: center;
  padding-top: var(--size-padding);
  margin-bottom: var(--size-padding);
  margin-top: var(--size-padding);
}
.designer svg {
  height: 10px;
  width: auto;
}

.contact-info a {
  display: block;
}

.contact-list {
  display: flex;
}
.contact-list + .contact-list {
  margin-top: 2rem;
}
.contact-list svg {
  width: 30px;
  margin-right: 20px;
}

.hero {
  position: relative;
  overflow: hidden;
}
@media (max-width: 860px) {
  .hero {
    margin-top: 0 !important;
  }
}
.hero video {
  aspect-ratio: 3/1;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.hero .tns-outer {
  position: absolute;
  z-index: 1;
  top: 0;
  height: 100%;
  display: grid;
  place-items: center;
  justify-content: center;
  text-align: center;
}
.hero .text-slider {
  color: var(--white);
}
.hero .text-slider p {
  font-size: var(--font-size-lg);
}
.hero .text-slider p strong {
  display: block;
}

.parallax-header,
.blog-header,
.video-hero,
.service-hero {
  min-height: 200px;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  padding: var(--size-padding) 0;
  --title-color: var(--white);
}
.parallax-header video,
.parallax-header .parallax-container,
.blog-header video,
.blog-header .parallax-container,
.video-hero video,
.video-hero .parallax-container,
.service-hero video,
.service-hero .parallax-container {
  position: absolute;
  width: 100%;
  z-index: -1;
  -o-object-fit: cover;
     object-fit: cover;
  height: 100%;
}
@media (max-width: 530px) {
  .parallax-header video img,
.parallax-header .parallax-container img,
.blog-header video img,
.blog-header .parallax-container img,
.video-hero video img,
.video-hero .parallax-container img,
.service-hero video img,
.service-hero .parallax-container img {
    transform: translate3d(0px, 0px, 0px) !important;
  }
}
.parallax-header .container,
.blog-header .container,
.video-hero .container,
.service-hero .container {
  position: relative;
}
.parallax-header .page-title,
.blog-header .page-title,
.video-hero .page-title,
.service-hero .page-title {
  color: var(--white);
}
.parallax-header .page-title:before,
.blog-header .page-title:before,
.video-hero .page-title:before,
.service-hero .page-title:before {
  display: none;
}
.parallax-header::before, .parallax-header::after,
.blog-header::before,
.blog-header::after,
.video-hero::before,
.video-hero::after,
.service-hero::before,
.service-hero::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.parallax-header::before,
.blog-header::before,
.video-hero::before,
.service-hero::before {
  background-color: rgba(var(--brand-primary-rgba), 0.5);
}

.parallax-header,
.blog-header {
  margin-bottom: var(--spacing);
}
@media (max-width: 780px) {
  .parallax-header,
.blog-header {
    min-height: 200px;
  }
}

.parallax-header:before {
  background-color: rgba(0, 159, 227, 0.6);
}

.blog-header {
  min-height: 346px;
}
.blog-header:before {
  background-color: rgba(110, 164, 202, 0.6);
}

.video-hero:before,
.service-hero:before {
  background-color: rgba(110, 164, 202, 0.6);
}
.video-hero::after,
.service-hero::after {
  border-top: 2px solid #fff;
  border-bottom: 2px solid #fff;
  top: 2px;
  bottom: 2px;
}

@media screen and (min-width: 860px) {
  .video-hero {
    min-height: 650px;
  }
}

.service-hero {
  min-height: 450px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/